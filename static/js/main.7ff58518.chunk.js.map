{"version":3,"sources":["components/BodyEnd.js","components/index.js","demo/index.js","reportWebVitals.js","index.js"],"names":["BodyEnd","props","el","document","createElement","style","display","body","appendChild","this","renders","removeChild","children","ReactDOM","render","React","Component","propTypes","PropTypes","oneOfType","string","elementType","defaultValue","disabled","bool","maxOptions","number","onBlur","func","onChange","onKeyDown","onRequestOptions","onSelect","changeOnSelect","options","object","arrayOf","regex","matchAny","minChars","requestOnlyIfNoOptions","spaceRemovers","spacer","trigger","value","offsetX","offsetY","passThroughEnter","ReactAutocompleteTextarea","arrayTriggerMatch","triggers","re","map","triggerStr","triggerMatch","match","triggerLength","length","isTrigger","str","i","substr","getMatch","bind","handleChange","handleKeyDown","handleResize","handleSelection","updateCaretPosition","updateHelper","resetHelper","renderAutocompleteList","state","helperVisible","left","matchLength","matchStart","selection","top","recentValue","enableSpaceRemovers","refInput","createRef","window","addEventListener","prevProps","caret","removeEventListener","providedOptions","RegExp","Array","isArray","sort","providedOptionsObject","forEach","triggersMatch","slugData","triggersIndex","substring","triggerIdx","triggerOptions","matchedSlug","filter","slug","idx","toLowerCase","indexOf","currTrigger","e","old","target","getInputSelection","end","setState","Math","max","newValue","slice","current","event","maxSelection","min","keyCode","preventDefault","part1","part2","changedStr","setCaretPosition","input","caretPos","getCaretCoordinates","rect","getBoundingClientRect","scrollY","scrollTop","optionNumber","helperOptions","val","highlightStart","className","onClick","onMouseEnter","rest","stateValue","propagated","Object","assign","keys","k","ref","defaultProps","Demo","useState","setValue","width","placeholder","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ff58518.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default class BodyEnd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement(\"div\");\r\n    this.el.style.display = \"contents\";\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n    this.renders();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renders();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  renders() {\r\n    const { children } = this.props;\r\n    ReactDOM.render(children, this.el);\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}","import React, { createRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport getCaretCoordinates from \"textarea-caret\";\r\nimport getInputSelection, { setCaretPosition } from \"get-input-selection\";\r\nimport BodyEnd from \"./BodyEnd\";\r\nimport \"./index.css\";\r\n\r\nconst KEY_UP = 38;\r\nconst KEY_DOWN = 40;\r\nconst KEY_RETURN = 13;\r\nconst KEY_ENTER = 14;\r\nconst KEY_ESCAPE = 27;\r\nconst KEY_TAB = 9;\r\n\r\nconst propTypes = {\r\n  Component: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\r\n  defaultValue: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  maxOptions: PropTypes.number,\r\n  onBlur: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onKeyDown: PropTypes.func,\r\n  onRequestOptions: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  changeOnSelect: PropTypes.func,\r\n  options: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  regex: PropTypes.string,\r\n  matchAny: PropTypes.bool,\r\n  minChars: PropTypes.number,\r\n  requestOnlyIfNoOptions: PropTypes.bool,\r\n  spaceRemovers: PropTypes.arrayOf(PropTypes.string),\r\n  spacer: PropTypes.string,\r\n  trigger: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  value: PropTypes.string,\r\n  offsetX: PropTypes.number,\r\n  offsetY: PropTypes.number,\r\n  passThroughEnter: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n  Component: \"textarea\",\r\n  defaultValue: \"\",\r\n  disabled: false,\r\n  maxOptions: 6,\r\n  onBlur: () => { },\r\n  onChange: () => { },\r\n  onKeyDown: () => { },\r\n  onRequestOptions: () => { },\r\n  onSelect: () => { },\r\n  changeOnSelect: (trigger, slug) => trigger + slug,\r\n  options: [],\r\n  regex: \"^[A-Za-z0-9\\\\-_]+$\",\r\n  matchAny: false,\r\n  minChars: 0,\r\n  requestOnlyIfNoOptions: true,\r\n  spaceRemovers: [\",\", \".\", \"!\", \"?\"],\r\n  spacer: \" \",\r\n  trigger: \"@\",\r\n  offsetX: 0,\r\n  offsetY: 0,\r\n  value: null,\r\n  passThroughEnter: false\r\n};\r\n\r\nclass ReactAutocompleteTextarea extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getMatch = this.getMatch.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.handleSelection = this.handleSelection.bind(this);\r\n    this.updateCaretPosition = this.updateCaretPosition.bind(this);\r\n    this.updateHelper = this.updateHelper.bind(this);\r\n    this.resetHelper = this.resetHelper.bind(this);\r\n    this.renderAutocompleteList = this.renderAutocompleteList.bind(this);\r\n\r\n    this.state = {\r\n      helperVisible: false,\r\n      left: 0,\r\n      trigger: null,\r\n      matchLength: 0,\r\n      matchStart: 0,\r\n      options: [],\r\n      selection: 0,\r\n      top: 0,\r\n      value: null\r\n    };\r\n\r\n    this.recentValue = props.defaultValue;\r\n    this.enableSpaceRemovers = false;\r\n    this.refInput = createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { options } = this.props;\r\n    const { caret } = this.state;\r\n\r\n    if (options.length !== prevProps.options.length) {\r\n      this.updateHelper(this.recentValue, caret, options);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  getMatch(str, caret, providedOptions) {\r\n    const { trigger, matchAny, regex } = this.props;\r\n    const re = new RegExp(regex);\r\n\r\n    let triggers = trigger;\r\n    if (!Array.isArray(triggers)) {\r\n      triggers = new Array(trigger);\r\n    }\r\n    triggers.sort();\r\n\r\n    const providedOptionsObject = providedOptions;\r\n    if (Array.isArray(providedOptions)) {\r\n      triggers.forEach((triggerStr) => {\r\n        providedOptionsObject[triggerStr] = providedOptions;\r\n      });\r\n    }\r\n\r\n    const triggersMatch = this.arrayTriggerMatch(triggers, re);\r\n    let slugData = null;\r\n\r\n    for (\r\n      let triggersIndex = 0;\r\n      triggersIndex < triggersMatch.length;\r\n      triggersIndex += 1\r\n    ) {\r\n      const { triggerStr, triggerMatch, triggerLength } = triggersMatch[\r\n        triggersIndex\r\n      ];\r\n\r\n      for (let i = caret - 1; i >= 0; i -= 1) {\r\n        const substr = str.substring(i, caret);\r\n        const match = substr.match(re);\r\n        let matchStart = -1;\r\n\r\n        if (triggerLength > 0) {\r\n          const triggerIdx = triggerMatch ? i : i - triggerLength + 1;\r\n\r\n          if (triggerIdx < 0) {\r\n            // out of input\r\n            break;\r\n          }\r\n\r\n          if (this.isTrigger(triggerStr, str, triggerIdx)) {\r\n            matchStart = triggerIdx + triggerLength;\r\n          }\r\n\r\n          if (!match && matchStart < 0) {\r\n            break;\r\n          }\r\n        } else {\r\n          if (match && i > 0) {\r\n            // find first non-matching character or begin of input\r\n            continue;\r\n          }\r\n          matchStart = i === 0 && match ? 0 : i + 1;\r\n\r\n          if (caret - matchStart === 0) {\r\n            // matched slug is empty\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (matchStart >= 0) {\r\n          const triggerOptions = providedOptionsObject[triggerStr];\r\n          if (triggerOptions == null) {\r\n            continue;\r\n          }\r\n\r\n          const matchedSlug = str.substring(matchStart, caret);\r\n\r\n          const options = triggerOptions.filter((slug) => {\r\n            const idx = slug.toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n            return idx !== -1 && (matchAny || idx === 0);\r\n          });\r\n\r\n          const currTrigger = triggerStr;\r\n          const matchLength = matchedSlug.length;\r\n\r\n          if (slugData === null) {\r\n            slugData = {\r\n              trigger: currTrigger,\r\n              matchStart,\r\n              matchLength,\r\n              options\r\n            };\r\n          } else {\r\n            slugData = {\r\n              ...slugData,\r\n              trigger: currTrigger,\r\n              matchStart,\r\n              matchLength,\r\n              options\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return slugData;\r\n  }\r\n\r\n  arrayTriggerMatch = (triggers, re) => {\r\n    const triggersMatch = triggers.map((trigger) => ({\r\n      triggerStr: trigger,\r\n      triggerMatch: trigger.match(re),\r\n      triggerLength: trigger.length\r\n    }));\r\n\r\n    return triggersMatch;\r\n  };\r\n\r\n  isTrigger = (trigger, str, i) => {\r\n    if (!trigger || !trigger.length) {\r\n      return true;\r\n    }\r\n\r\n    if (str.substr(i, trigger.length) === trigger) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  handleChange(e) {\r\n    const { onChange, options, spaceRemovers, spacer, value } = this.props;\r\n\r\n    const old = this.recentValue;\r\n    const str = e.target.value;\r\n    const caret = getInputSelection(e.target).end;\r\n\r\n    if (!str.length) {\r\n      this.setState({ helperVisible: false });\r\n    }\r\n\r\n    this.recentValue = str;\r\n\r\n    this.setState({ caret, value: e.target.value });\r\n\r\n    if (!str.length || !caret) {\r\n      return onChange(e.target.value);\r\n    }\r\n\r\n    // '@wonderjenny ,|' -> '@wonderjenny, |'\r\n    if (\r\n      this.enableSpaceRemovers &&\r\n      spaceRemovers.length &&\r\n      str.length > 2 &&\r\n      spacer.length\r\n    ) {\r\n      for (let i = 0; i < Math.max(old.length, str.length); i += 1) {\r\n        if (old[i] !== str[i]) {\r\n          if (\r\n            i >= 2 &&\r\n            str[i - 1] === spacer &&\r\n            spaceRemovers.indexOf(str[i - 2]) === -1 &&\r\n            spaceRemovers.indexOf(str[i]) !== -1 &&\r\n            this.getMatch(str.substring(0, i - 2), caret - 3, options)\r\n          ) {\r\n            const newValue = `${str.slice(0, i - 1)}${str.slice(\r\n              i,\r\n              i + 1\r\n            )}${str.slice(i - 1, i)}${str.slice(i + 1)}`;\r\n\r\n            this.updateCaretPosition(i + 1);\r\n            this.refInput.current.value = newValue;\r\n\r\n            if (!value) {\r\n              this.setState({ value: newValue });\r\n            }\r\n\r\n            return onChange(newValue);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.enableSpaceRemovers = false;\r\n    }\r\n\r\n    this.updateHelper(str, caret, options);\r\n\r\n    if (!value) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n\r\n    return onChange(e.target.value);\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    const { helperVisible, options, selection } = this.state;\r\n    const { onKeyDown, passThroughEnter, maxOptions } = this.props;\r\n    const maxSelection = Math.min(maxOptions, options.length); // GR: Fix error key_up and key_up\r\n\r\n    if (helperVisible) {\r\n      switch (event.keyCode) {\r\n        case KEY_ESCAPE:\r\n          event.preventDefault();\r\n          this.resetHelper();\r\n          break;\r\n        case KEY_UP:\r\n          event.preventDefault();\r\n          this.setState({\r\n            selection: (maxSelection + selection - 1) % maxSelection\r\n          });\r\n          break;\r\n        case KEY_DOWN:\r\n          event.preventDefault();\r\n          this.setState({ selection: (selection + 1) % maxSelection });\r\n          break;\r\n        case KEY_ENTER:\r\n        case KEY_RETURN:\r\n          if (!passThroughEnter) {\r\n            event.preventDefault();\r\n          }\r\n          this.handleSelection(selection);\r\n          break;\r\n        case KEY_TAB:\r\n          this.handleSelection(selection);\r\n          break;\r\n        default:\r\n          onKeyDown(event);\r\n          break;\r\n      }\r\n    } else {\r\n      onKeyDown(event);\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({ helperVisible: false });\r\n  }\r\n\r\n  handleSelection(idx) {\r\n    const { spacer, onSelect, changeOnSelect } = this.props;\r\n    const { matchStart, matchLength, options, trigger } = this.state;\r\n\r\n    const slug = options[idx];\r\n    const value = this.recentValue;\r\n    const part1 = value.substring(0, matchStart - trigger.length);\r\n    const part2 = value.substring(matchStart + matchLength);\r\n\r\n    const event = { target: this.refInput.current };\r\n    const changedStr = changeOnSelect(trigger, slug);\r\n\r\n    event.target.value = `${part1}${changedStr}${spacer}${part2}`;\r\n    this.handleChange(event);\r\n    onSelect(event.target.value);\r\n\r\n    this.resetHelper();\r\n\r\n    this.updateCaretPosition(part1.length + changedStr.length + 1);\r\n\r\n    this.enableSpaceRemovers = true;\r\n  }\r\n\r\n  updateCaretPosition(caret) {\r\n    this.setState({ caret }, () =>\r\n      setCaretPosition(this.refInput.current, caret)\r\n    );\r\n  }\r\n\r\n  updateHelper(str, caret, options) {\r\n    const input = this.refInput.current;\r\n\r\n    const slug = this.getMatch(str, caret, options);\r\n\r\n    if (slug) {\r\n      const caretPos = getCaretCoordinates(input, caret - 1); // GR: Fix line break tooltip when text is not newline\r\n      const rect = input.getBoundingClientRect();\r\n\r\n      const top = rect.top + caretPos.top + window.scrollY - input.scrollTop; // GR: Use top for tooltip\r\n      const left = rect.left + caretPos.left; // GR: Use left for tooltip\r\n\r\n      const { minChars, onRequestOptions, requestOnlyIfNoOptions } = this.props;\r\n      if (\r\n        slug.matchLength >= minChars &&\r\n        (slug.options.length > 1 ||\r\n          (slug.options.length === 1 &&\r\n            slug.options[0].length !== slug.matchLength))\r\n      ) {\r\n        this.setState({\r\n          helperVisible: true,\r\n          top,\r\n          left,\r\n          ...slug\r\n        });\r\n      } else {\r\n        if (!requestOnlyIfNoOptions || !slug.options.length) {\r\n          onRequestOptions(str.substr(slug.matchStart, slug.matchLength));\r\n        }\r\n\r\n        this.resetHelper();\r\n      }\r\n    } else {\r\n      this.resetHelper();\r\n    }\r\n  }\r\n\r\n  resetHelper() {\r\n    this.setState({ helperVisible: false, selection: 0 });\r\n  }\r\n\r\n  renderAutocompleteList() {\r\n    const {\r\n      helperVisible,\r\n      left,\r\n      matchStart,\r\n      matchLength,\r\n      options,\r\n      selection,\r\n      top,\r\n      value\r\n    } = this.state;\r\n\r\n    if (!helperVisible) {\r\n      return null;\r\n    }\r\n\r\n    const { maxOptions, offsetX, offsetY } = this.props;\r\n\r\n    if (options.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    if (selection >= options.length) {\r\n      this.setState({ selection: 0 });\r\n\r\n      return null;\r\n    }\r\n\r\n    const optionNumber = maxOptions === 0 ? options.length : maxOptions;\r\n\r\n    const helperOptions = options.slice(0, optionNumber).map((val, idx) => {\r\n      const highlightStart = val\r\n        .toLowerCase()\r\n        .indexOf(value.substr(matchStart, matchLength).toLowerCase());\r\n\r\n      return (\r\n        <li\r\n          className={\r\n            idx === selection ? \"react-autocomplete-input-li-active\" : null\r\n          }\r\n          key={val}\r\n          onClick={() => {\r\n            this.handleSelection(idx);\r\n          }}\r\n          onMouseEnter={() => {\r\n            this.setState({ selection: idx });\r\n          }}\r\n        >\r\n          {val.slice(0, highlightStart)}\r\n          <strong>{val.substr(highlightStart, matchLength)}</strong>\r\n          {val.slice(highlightStart + matchLength)}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <BodyEnd>\r\n        <ul\r\n          className=\"react-autocomplete-input\"\r\n          style={{\r\n            left: left + offsetX,\r\n            top: top + offsetY\r\n          }}\r\n        >\r\n          {helperOptions}\r\n        </ul>\r\n        <div\r\n          className=\"react-autocomplete-backdrop\"\r\n          onClick={this.handleResize}\r\n        />\r\n      </BodyEnd>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      Component,\r\n      defaultValue,\r\n      disabled,\r\n      onBlur,\r\n      value,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const { value: stateValue } = this.state;\r\n\r\n    const propagated = Object.assign({}, rest);\r\n    Object.keys(propTypes).forEach((k) => {\r\n      delete propagated[k];\r\n    });\r\n\r\n    let val = \"\";\r\n\r\n    if (typeof value !== \"undefined\" && value !== null) {\r\n      val = value;\r\n    } else if (stateValue) {\r\n      val = stateValue;\r\n    } else if (defaultValue) {\r\n      val = defaultValue;\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <Component\r\n          disabled={disabled}\r\n          onBlur={onBlur}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          ref={this.refInput}\r\n          value={val}\r\n          {...propagated}\r\n          className=\"react-autocomplete-textArea\"\r\n        />\r\n        {this.renderAutocompleteList()}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nReactAutocompleteTextarea.propTypes = propTypes;\r\nReactAutocompleteTextarea.defaultProps = defaultProps;\r\n\r\nexport default ReactAutocompleteTextarea;\r\nexport { ReactAutocompleteTextarea, BodyEnd };","import React from 'react';\nimport ReactAutocompleteTextarea from '../components';\nimport './index.css';\n\nfunction Demo() {\n  const [value, setValue] = React.useState('');\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          react-autocomplete-textarea demo\n        </p>\n\n        <div style={{ width: 360 }}>\n          <span>Usage Example</span>\n          <ReactAutocompleteTextarea\n            placeholder=\"try input @\"\n            trigger=\"@\"\n            offsetX={8}\n            options={[\"apple\", \"apricot\", \"banana\", \"carrot\"]}\n            rows=\"4\"\n            value={value}\n            onChange={setValue}\n          />\n\n          <span>Multiple Triggers and Options Example</span>\n          <ReactAutocompleteTextarea\n            placeholder=\"try input @ or @@\"\n            trigger={[\"@\", \"@@\"]}\n            options={{ \"@\": [\"aa\", \"ab\", \"abc\", \"abcd\"], \"@@\": [\"az\", \"ar\"] }}\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Demo;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Demo from './demo';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Demo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}